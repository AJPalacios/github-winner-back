{"version":3,"sources":["components/Form.js","components/Home.js","components/Stats.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","loading","userOne","userTwo","handleChangeOne","e","target","name","value","_this","setState","handleChangeTwo","getUser","firstUrl","concat","secondUrl","preventDefault","axios","all","get","then","spread","first","second","localStorage","setItem","JSON","stringify","data","props","history","push","react_default","a","createElement","onSubmit","this","input","type","placeholder","onChange","es_button","htmlType","Component","withRouter","Home","className","components_Form","TabPane","Tabs","Meta","Card","Stats","usernameOne","usernameTwo","userOneData","userTwoData","starsOne","starsTwo","winner","winnerUser","getWinner","console","log","parse","getItem","GuserOne","GuserTwo","forEach","element","stargazers_count","maxOne","Math","max","apply","maxTwo","_this2","operations","onClick","message","success","Link","to","tabs","tabBarExtraContent","tab","key","row","gutter","sort","b","map","r","i","col","span","card","title","owner","login","extra","style","width","avatar","href","html_url","src","avatar_url","description","language","Routes","Switch","Route","exact","path","component","App","src_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.175c821f.chunk.js","sourcesContent":["import React,{ Component } from 'react'\r\nimport {Button, Input} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nclass Form extends Component {\r\n\r\n  state = {\r\n    loading: false,\r\n    userOne:'',\r\n    userTwo:''\r\n  }\r\n\r\n  handleChangeOne = (e)=>{\r\n    const field = e.target.name\r\n    const value = e.target.value\r\n    this.setState({\r\n      userOne:value\r\n    })\r\n    \r\n  }\r\n  handleChangeTwo = (e)=>{\r\n    const field = e.target.name\r\n    const value = e.target.value\r\n    this.setState({\r\n      userTwo:value\r\n    })\r\n    \r\n  }\r\n\r\n\tgetUser=(e)=>{\r\n\r\n    const firstUrl = `https://api.github.com/users/${this.state.userOne}/repos`\r\n    const secondUrl = `https://api.github.com/users/${this.state.userTwo}/repos`\r\n\r\n    e.preventDefault()\r\n\r\n    this.setState({\r\n      loading:true\r\n    })\r\n\r\n    axios.all([\r\n      axios.get(firstUrl),\r\n      axios.get(secondUrl)\r\n    ])\r\n    .then(axios.spread((first,second)=>{\r\n      this.setState({loading:false})\r\n\r\n      localStorage.setItem('GithubUserOne', this.state.userOne)\r\n      localStorage.setItem('GithubUserTwo', this.state.userTwo)\r\n\r\n      localStorage.setItem('userOne', JSON.stringify(first.data))\r\n      localStorage.setItem('userTwo', JSON.stringify(second.data))\r\n      const stats = this.props.history\r\n      stats.push('/stats')\r\n    }))\r\n\t}\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>Github Winner!</h1>\r\n        <h2>Ingresa dos usernames</h2>\r\n        <form onSubmit={this.getUser}>\r\n          <Input\r\n          name='usernameOne'\r\n          type='text'\r\n          placeholder='username one'\r\n          onChange={this.handleChangeOne}\r\n          />\r\n          <Input\r\n          name='usernameTwo'\r\n          type='text'\r\n          placeholder='username two'\r\n          onChange={this.handleChangeTwo}\r\n          />\r\n          <Button type=\"primary\" htmlType='submit'>GO!</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Form)\r\n","import React, {Component} from 'react';\r\n\r\nimport Form from './Form';\r\n\r\nclass Home extends Component {\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Form/>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Home","import React, {Component} from 'react'\r\nimport { Card, Tabs, Button, Row, Col, Avatar, message } from 'antd'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst TabPane = Tabs.TabPane\r\n\r\nconst {Meta} = Card\r\n\r\nclass Stats extends Component{\r\n\r\n  state={\r\n    usernameOne:'',\r\n    usernameTwo:'',\r\n    userOneData: [],\r\n    userTwoData:[],\r\n    starsOne:0,\r\n    starsTwo:0,\r\n    winner:0,\r\n    winnerUser:''\r\n  }\r\n\r\n  componentWillMount(){\r\n    const userOne = JSON.parse(localStorage.getItem('userOne'))\r\n    const userTwo = JSON.parse(localStorage.getItem('userTwo'))\r\n\r\n    const GuserOne = localStorage.getItem('GithubUserOne')\r\n    const GuserTwo = localStorage.getItem('GithubUserTwo')\r\n\r\n    console.log(GuserOne)\r\n\r\n    this.setState({\r\n      usernameOne:GuserOne,\r\n      usernameTwo:GuserTwo,\r\n      userOneData: userOne,\r\n      userTwoData: userTwo\r\n    })\r\n\r\n    this.getWinner()\r\n\r\n  }\r\n\r\n  getWinner=(e)=>{\r\n    \r\n    console.log(\"clickkkkk!!\")\r\n    const userOne = JSON.parse(localStorage.getItem('userOne'))\r\n    const userTwo = JSON.parse(localStorage.getItem('userTwo'))\r\n\r\n    const GuserOne = localStorage.getItem('GithubUserOne')\r\n    const GuserTwo = localStorage.getItem('GithubUserTwo')\r\n    \r\n    let starsOne = [] \r\n    let starsTwo = []\r\n\r\n    userOne.forEach(element => {\r\n      starsOne.push(element.stargazers_count)\r\n    });\r\n\r\n    userTwo.forEach(element => {\r\n      starsTwo.push(element.stargazers_count)\r\n    });\r\n\r\n    console.log(starsTwo)\r\n\r\n    var maxOne = Math.max.apply(null,starsOne)\r\n    var maxTwo = Math.max.apply(null,starsTwo)\r\n\r\n    this.setState({\r\n      starsOne: maxOne,\r\n      starsTwo: maxTwo\r\n    })\r\n\r\n    if(maxOne>maxTwo){\r\n      this.setState({\r\n        winner:maxOne,\r\n        winnerUser:GuserOne\r\n      })\r\n      \r\n    }\r\n    if (maxTwo>maxOne){\r\n      this.setState({\r\n        winner:maxTwo,\r\n        winnerUser:GuserTwo\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const success = ()=>{message.success(`The winner is ${this.state.winnerUser} have ${this.state.winner} stars`)}\r\n    const operations = <Button type='primary' onClick={success}>Get the Winner!</Button>\r\n    return(\r\n      <div>\r\n        <div className='container has-text-centered'>\r\n          <h3 className='title is-1'>Stats</h3>\r\n          <Link className='subtitle is-2 navbar-item Width' to='/'>Back</Link>\r\n        </div>\r\n        <div className='container'> \r\n          <div className='notification'>\r\n            <Tabs tabBarExtraContent={operations}>\r\n              <TabPane tab={this.state.usernameOne} key=\"1\">\r\n              <Row gutter={18}>\r\n                { this.state.userOneData.sort((a,b)=>b.stargazers_count - a.stargazers_count)\r\n                  .map((r,i)=>{\r\n                    \r\n                    return <Col key={i} className=\"gutter-row\" span={6}>\r\n                          <div className=\"gutter-box\">\r\n                            <Card  className='Margin' key={i} title={r.owner.login} extra={<p>Stars {r.stargazers_count}</p>} style={{ width: 300 }}>\r\n                            <Meta\r\n                              avatar={<a href={r.owner.html_url}><Avatar src={r.owner.avatar_url}/></a>}\r\n                              title={<a href={r.html_url} target='blank'>{r.name}</a>}\r\n                              description={r.language != null ? r.language : \"Sin lenguaje\"}\r\n                            />\r\n                            </Card>\r\n                          </div>\r\n                        </Col>\r\n                  })\r\n                }\r\n              </Row>\r\n              </TabPane>\r\n              <TabPane tab={this.state.usernameTwo} key=\"2\">\r\n                <Row gutter={18}>\r\n                  { this.state.userTwoData.sort((a,b)=>b.stargazers_count - a.stargazers_count)\r\n\r\n                    .map((r,i)=>{\r\n                      \r\n                      return <Col key={i} className=\"gutter-row\" span={6}>\r\n                            <div className=\"gutter-box\">\r\n                              <Card className='Margin' key={i} title={r.owner.login} extra={<p>Stars {r.stargazers_count}</p>} style={{ width: 300 }}>\r\n                              <Meta\r\n                                avatar={<a href={r.owner.html_url}><Avatar src={r.owner.avatar_url}/></a>}\r\n                                title={<a href={r.html_url} target='blank'>{r.name}</a>}\r\n                                description={r.language}\r\n                              />\r\n                              </Card>\r\n                            </div>\r\n                          </Col>\r\n                    })\r\n                  }\r\n                </Row>\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stats","import React from 'react'\r\nimport {Switch,Route} from 'react-router-dom'\r\nimport Home from './components/Home'\r\nimport Stats from './components/Stats'\r\n\r\nconst Routes = ()=>{\r\n  return(\r\n    <Switch>\r\n      <Route exact path='/' component={Home}/>\r\n      <Route path='/stats' component={Stats}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes'\n\nclass App extends Component {\n  render() {\n    return (\n          <Routes/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,withRouter} from 'react-router-dom'\nimport 'bulma/css/bulma.css'\nimport 'antd/dist/antd.css'\n\nconst WithRouter = ()=><BrowserRouter><App /></BrowserRouter>\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}